{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "modals-10",
  "type": "registry:block",
  "description": "Permanently remove archive modal with effects list",
  "registryDependencies": [
    "dialog",
    "button",
    "card"
  ],
  "files": [
    {
      "path": "registry/creative-tim-ui/blocks/modals-10/page.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { X, AlertCircle } from \"lucide-react\";\n\nimport { Button } from \"@/registry/creative-tim-ui/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/registry/creative-tim-ui/ui/card\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/registry/creative-tim-ui/ui/dialog\";\n\nexport default function ModalsBlock() {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <div className=\"grid place-items-center w-full min-h-screen\">\n      <Dialog open={isOpen} onOpenChange={setIsOpen}>\n        <DialogTrigger asChild>\n          <Button onClick={() => setIsOpen(true)}>Open Modal</Button>\n        </DialogTrigger>\n        <DialogContent className=\"sm:max-w-[550px]\">\n          <button\n            onClick={() => setIsOpen(false)}\n            className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\"\n          >\n            <X className=\"h-4 w-4\" />\n            <span className=\"sr-only\">Close</span>\n          </button>\n          <DialogHeader>\n            <DialogTitle className=\"text-xl mb-2\">\n              Permanently Remove Archive\n            </DialogTitle>\n          </DialogHeader>\n          <p className=\"text-sm text-muted-foreground mt-2\">\n            Erasing this fashion vault will wipe its data across your platform and\n            collaborators.\n          </p>\n\n          <Card className=\"my-6 border-destructive/50 bg-destructive/5\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-base flex items-center gap-2\">\n                <AlertCircle className=\"h-4 w-4 text-destructive\" />\n                Review Before Deleting\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground\">\n                Once removed, associated content (lookbooks, notes, edits) will be\n                lost forever.\n              </p>\n            </CardContent>\n          </Card>\n\n          <div className=\"space-y-3 mb-6\">\n            <p className=\"text-sm font-semibold\">This action will:</p>\n            <ul className=\"space-y-2 text-sm text-muted-foreground\">\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-destructive mt-1\">•</span>\n                <span>Deletes all digital outfits and metadata</span>\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-destructive mt-1\">•</span>\n                <span>Disconnects synced creative briefs</span>\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-primary mt-1\">•</span>\n                <span>No change to billing or usage limits</span>\n              </li>\n            </ul>\n          </div>\n\n          <div className=\"flex items-center justify-end gap-2 pt-4\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={() => setIsOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button type=\"submit\">I acknowledge and confirm</Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/modals-10/page.tsx"
    }
  ],
  "meta": {
    "iframeHeight": "750px",
    "container": "w-full bg-surface",
    "mobile": "component"
  },
  "categories": [
    "modals"
  ]
}